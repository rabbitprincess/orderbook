package orderbook

import (
	"testing"

	"github.com/rabbitprincess/snum_sort/snum"
	"github.com/stretchr/testify/require"
)

func TestOrderBook(t *testing.T) {
	type order struct {
		orderWay OrderWay
		price    string
		amount   string
	}

	for _, test := range []struct {
		pt      PreciseType
		step    Step
		inputs  []*order
		expects []*order
	}{
		{fixed, -6, []*order{
			// buy 는 자리 올림 ( 0.000002 )
			{Buy, "0.000001", "10000"},
			{Buy, "0.0000011", "10000"},
			{Buy, "0.0000015", "10000"},
			{Buy, "0.0000019", "10000"},
			{Buy, "0.000002", "10000"},
			// sell 은 자리 내림 ( 0.000001 )
			{Sell, "0.000001", "10000"},
			{Sell, "0.0000011", "10000"},
			{Sell, "0.0000015", "10000"},
			{Sell, "0.0000019", "10000"},
			{Sell, "0.000002", "10000"},
		}, []*order{
			{Buy, "0.000001", "10000"},
			{Buy, "0.000002", "40000"},
			{Sell, "0.000001", "40000"},
			{Sell, "0.000002", "10000"},
		}},
		{fixed, -4, []*order{
			{Buy, "0.0009", "10000"},
			{Buy, "0.00098", "10000"},
			{Buy, "0.000987", "10000"},
			{Buy, "0.009", "10000"},
			{Buy, "0.0098", "10000"},
			{Buy, "0.00987", "10000"},
			{Buy, "0.098", "10000"},
			{Buy, "0.0987", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.23", "10000"},
			{Buy, "1.24", "10000"},
			{Buy, "10", "10000"},
			{Buy, "10.1", "10000"},

			{Sell, "1.2", "10000"},
			{Sell, "1.23", "10000"},
			{Sell, "1.24", "10000"},
			{Sell, "10", "10000"},
			{Sell, "10.1", "10000"},
			{Sell, "15.11111", "10000"},
			{Sell, "15.1111", "10000"},
			{Sell, "16.111", "10000"},
			{Sell, "17.11", "10000"},
			{Sell, "18.1", "10000"},
			{Sell, "18.9", "10000"},
			{Sell, "88", "10000"},
			{Sell, "887", "10000"},
			{Sell, "8876", "10000"},
			{Sell, "8876.5", "10000"},
		}, []*order{
			{Buy, "0.0009", "10000"},
			{Buy, "0.001", "20000"},
			{Buy, "0.009", "10000"},
			{Buy, "0.0098", "10000"},
			{Buy, "0.0099", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.098", "10000"},
			{Buy, "0.0987", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.23", "10000"},
			{Buy, "1.24", "10000"},
			{Buy, "10", "10000"},
			{Buy, "10.1", "10000"},

			{Sell, "1.2", "10000"},
			{Sell, "1.23", "10000"},
			{Sell, "1.24", "10000"},
			{Sell, "10", "10000"},
			{Sell, "10.1", "10000"},
			{Sell, "15.1111", "20000"},
			{Sell, "16.111", "10000"},
			{Sell, "17.11", "10000"},
			{Sell, "18.1", "10000"},
			{Sell, "18.9", "10000"},
			{Sell, "88", "10000"},
			{Sell, "887", "10000"},
			{Sell, "8876", "10000"},
			{Sell, "8876.5", "10000"},
		}},
		{fixed, -1, []*order{
			{Buy, "0.0009", "10000"},
			{Buy, "0.00098", "10000"},
			{Buy, "0.000987", "10000"},
			{Buy, "0.009", "10000"},
			{Buy, "0.0098", "10000"},
			{Buy, "0.00987", "10000"},
			{Buy, "0.098", "10000"},
			{Buy, "0.0987", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.23", "10000"},
			{Buy, "1.24", "10000"},
			{Buy, "10", "10000"},
			{Buy, "10.1", "10000"},

			{Sell, "1.2", "10000"},
			{Sell, "1.23", "10000"},
			{Sell, "1.24", "10000"},
			{Sell, "10", "10000"},
			{Sell, "10.1", "10000"},
			{Sell, "15.11111", "10000"},
			{Sell, "15.1111", "10000"},
			{Sell, "16.111", "10000"},
			{Sell, "17.11", "10000"},
			{Sell, "18.1", "10000"},
			{Sell, "18.9", "10000"},
			{Sell, "88", "10000"},
			{Sell, "887", "10000"},
			{Sell, "8876", "10000"},
			{Sell, "8876.5", "10000"},
		}, []*order{
			{Buy, "0.1", "90000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.3", "20000"},
			{Buy, "10", "10000"},
			{Buy, "10.1", "10000"},

			{Sell, "1.2", "30000"},
			{Sell, "10", "10000"},
			{Sell, "10.1", "10000"},
			{Sell, "15.1", "20000"},
			{Sell, "16.1", "10000"},
			{Sell, "17.1", "10000"},
			{Sell, "18.1", "10000"},
			{Sell, "18.9", "10000"},
			{Sell, "88", "10000"},
			{Sell, "887", "10000"},
			{Sell, "8876", "10000"},
			{Sell, "8876.5", "10000"},
		}},
		{fixed, 1, []*order{
			{Buy, "0.0009", "10000"},
			{Buy, "0.00098", "10000"},
			{Buy, "0.000987", "10000"},
			{Buy, "0.009", "10000"},
			{Buy, "0.0098", "10000"},
			{Buy, "0.00987", "10000"},
			{Buy, "0.098", "10000"},
			{Buy, "0.0987", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.23", "10000"},
			{Buy, "1.24", "10000"},
			{Buy, "10", "10000"},
			{Buy, "10.1", "10000"},

			{Sell, "1.2", "10000"},
			{Sell, "1.23", "10000"},
			{Sell, "1.24", "10000"},
			{Sell, "10", "10000"},
			{Sell, "10.1", "10000"},
			{Sell, "15.11111", "10000"},
			{Sell, "15.1111", "10000"},
			{Sell, "16.111", "10000"},
			{Sell, "17.11", "10000"},
			{Sell, "18.1", "10000"},
			{Sell, "18.9", "10000"},
			{Sell, "88", "10000"},
			{Sell, "887", "10000"},
			{Sell, "8876", "10000"},
			{Sell, "8876.5", "10000"},
		}, []*order{
			{Buy, "10", "140000"},
			{Buy, "20", "10000"},

			{Sell, "0", "30000"},
			{Sell, "10", "80000"},
			{Sell, "80", "10000"},
			{Sell, "880", "10000"},
			{Sell, "8870", "20000"},
		}},
		{fixed, 4, []*order{
			{Buy, "0.0009", "10000"},
			{Buy, "0.00098", "10000"},
			{Buy, "0.000987", "10000"},
			{Buy, "0.009", "10000"},
			{Buy, "0.0098", "10000"},
			{Buy, "0.00987", "10000"},
			{Buy, "0.098", "10000"},
			{Buy, "0.0987", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.23", "10000"},
			{Buy, "1.24", "10000"},
			{Buy, "10", "10000"},
			{Buy, "10.1", "10000"},

			{Sell, "1.2", "10000"},
			{Sell, "1.23", "10000"},
			{Sell, "1.24", "10000"},
			{Sell, "10", "10000"},
			{Sell, "10.1", "10000"},
			{Sell, "15.11111", "10000"},
			{Sell, "15.1111", "10000"},
			{Sell, "16.111", "10000"},
			{Sell, "17.11", "10000"},
			{Sell, "18.1", "10000"},
			{Sell, "18.9", "10000"},
			{Sell, "88", "10000"},
			{Sell, "887", "10000"},
			{Sell, "8876", "10000"},
			{Sell, "8876.5", "10000"},
		}, []*order{
			{Buy, "10000", "150000"},
			{Sell, "0", "150000"},
		}},
		{dynamic, 4, []*order{
			{Buy, "0.0009", "10000"},
			{Buy, "0.00098", "10000"},
			{Buy, "0.000987", "10000"},
			{Buy, "0.009", "10000"},
			{Buy, "0.0098", "10000"},
			{Buy, "0.00987", "10000"},
			{Buy, "0.098", "10000"},
			{Buy, "0.0987", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.23", "10000"},
			{Buy, "1.24", "10000"},
			{Buy, "10", "10000"},
			{Buy, "10.1", "10000"},

			{Sell, "1.2", "10000"},
			{Sell, "1.23", "10000"},
			{Sell, "1.24", "10000"},
			{Sell, "10", "10000"},
			{Sell, "10.1", "10000"},
			{Sell, "15.11111", "10000"},
			{Sell, "15.1111", "10000"},
			{Sell, "16.111", "10000"},
			{Sell, "17.11", "10000"},
			{Sell, "18.1", "10000"},
			{Sell, "18.9", "10000"},
			{Sell, "88", "10000"},
			{Sell, "887", "10000"},
			{Sell, "8876", "10000"},
			{Sell, "8876.5", "10000"},
		}, []*order{
			{Buy, "0.0009", "10000"},
			{Buy, "0.00098", "10000"},
			{Buy, "0.000987", "10000"},
			{Buy, "0.009", "10000"},
			{Buy, "0.0098", "10000"},
			{Buy, "0.00987", "10000"},
			{Buy, "0.098", "10000"},
			{Buy, "0.0987", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.23", "10000"},
			{Buy, "1.24", "10000"},
			{Buy, "10", "10000"},
			{Buy, "10.1", "10000"},

			{Sell, "1.2", "10000"},
			{Sell, "1.23", "10000"},
			{Sell, "1.24", "10000"},
			{Sell, "10", "10000"},
			{Sell, "10.1", "10000"},
			{Sell, "15.11", "20000"},
			{Sell, "16.11", "10000"},
			{Sell, "17.11", "10000"},
			{Sell, "18.1", "10000"},
			{Sell, "18.9", "10000"},
			{Sell, "88", "10000"},
			{Sell, "887", "10000"},
			{Sell, "8876", "20000"},
		}},
		{dynamic, 2, []*order{
			{Buy, "0.0009", "10000"},
			{Buy, "0.00098", "10000"},
			{Buy, "0.000987", "10000"},
			{Buy, "0.009", "10000"},
			{Buy, "0.0098", "10000"},
			{Buy, "0.00987", "10000"},
			{Buy, "0.098", "10000"},
			{Buy, "0.0987", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.23", "10000"},
			{Buy, "1.24", "10000"},
			{Buy, "10", "10000"},
			{Buy, "10.1", "10000"},

			{Sell, "1.2", "10000"},
			{Sell, "1.23", "10000"},
			{Sell, "1.24", "10000"},
			{Sell, "10", "10000"},
			{Sell, "10.1", "10000"},
			{Sell, "15.11111", "10000"},
			{Sell, "15.1111", "10000"},
			{Sell, "16.111", "10000"},
			{Sell, "17.11", "10000"},
			{Sell, "18.1", "10000"},
			{Sell, "18.9", "10000"},
			{Sell, "88", "10000"},
			{Sell, "887", "10000"},
			{Sell, "8876", "10000"},
			{Sell, "8876.5", "10000"},
		}, []*order{
			{Buy, "0.0009", "10000"},
			{Buy, "0.00098", "10000"},
			{Buy, "0.00099", "10000"},
			{Buy, "0.009", "10000"},
			{Buy, "0.0098", "10000"},
			{Buy, "0.0099", "10000"},
			{Buy, "0.098", "10000"},
			{Buy, "0.099", "10000"},
			{Buy, "0.09", "10000"},
			{Buy, "0.9", "10000"},
			{Buy, "1.2", "10000"},
			{Buy, "1.3", "20000"},
			{Buy, "10", "10000"},
			{Buy, "11", "10000"},

			{Sell, "1.2", "30000"},
			{Sell, "10", "20000"},
			{Sell, "15", "20000"},
			{Sell, "16", "10000"},
			{Sell, "17", "10000"},
			{Sell, "18", "20000"},
			{Sell, "88", "10000"},
			{Sell, "880", "10000"},
			{Sell, "8800", "20000"},
		}},
	} {
		orderBook := &OrderBook{}
		orderBook.Init(test.pt, test.step, test.step)

		for _, input := range test.inputs {
			err := orderBook.Update(input.orderWay, snum.New(input.price), snum.New(input.amount))
			require.NoError(t, err)
		}

		// 결과물
		oneStep := orderBook.Get(test.step)
		for _, expect := range test.expects {
			var result *Group
			if expect.orderWay == Buy {
				result = oneStep.mapBuy[expect.price]
			} else {
				result = oneStep.mapSell[expect.price]
			}
			if result == nil {
				t.Errorf("not exist price | way : %v | price : %s", expect.orderWay, expect.price)
			}

			// amount 비교
			if (*result.Amount).Cmp(snum.New(expect.amount)) != 0 {
				t.Errorf("amount not equal | way : %v | price : %s | amount : %s | result amount : %s",
					expect.orderWay, expect.price, expect.amount, (*result.Amount).String())
			}
		}
	}

}
